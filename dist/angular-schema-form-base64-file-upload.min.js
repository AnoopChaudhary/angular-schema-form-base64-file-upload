angular.module("templates",[]).run(["$templateCache",function(e){e.put("src/templates/angular-schema-form-base64-file-upload.html",'<div class="angular-schema-form--base64-file" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false}">\n  <label class="control-label" ng-hide="form.notitle">{{form.title}}</label>\n  <div base64-file-upload="form" sf-field-model schema-validate="form">\n    <label>\n      <input type="file" class="base64-file--input" style="display:none;" ng-disabled="file"/>\n      <div class="base64-file--drop-area" ng-class="{\'file-hovering\': dropAreaHover, \'has-file\': file}">\n\n        <div class="base64-file--file" ng-show="file">\n          <div class="base64-file--file-preview"\n               ng-style="{\'background-image\': isImage(file) ? \'url(\' + file.src + \')\': \'\'}">\n            <span ng-show="!isImage(file)">{{file.ext}}</span>\n          </div>\n          <div class="base64-file--file-name">{{file.name}}</div>\n          <div class="base64-file--file-size">{{file.humanSize}}</div>\n          <div class="base64-file--file-remove" ng-click="removeFile($event)">&#10005</div>\n        </div>\n        <span ng-show="!file" class="base64-file--drop-area-description">{{form.placeholder || dropText}}</span>\n      </div>\n    </label>\n  </div>\n\n  <span class="help-block" sf-message="form.description"></span>\n</div>\n')}]),angular.module("angularSchemaFormBase64FileUpload",["schemaForm","templates"]).provider("base64FileUploadConfig",function(){this.setDropText=function(e){this.dropText=e},this.$get=function(){return this}}).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,a,i,n){var r=function(a,i,r){if("string"===i.type&&"base64"===i.format){var l=e.stdFormObj(a,i,r);return l.key=r.path,l.type="base64file",r.lookup[n.stringify(r.path)]=l,l}};e.defaults.string.unshift(r),a.defineAddOn("bootstrapDecorator","base64file","src/templates/angular-schema-form-base64-file-upload.html",i.stdBuilders)}]),angular.module("angularSchemaFormBase64FileUpload").directive("base64FileUpload",["base64FileUploadConfig","$timeout",function(e,a){return{restrict:"A",require:"ngModel",scope:!0,link:function(i,n,r,l){i.ngModel=l,i.dropAreaHover=!1,i.file=void 0,i.fileImagePreview="",i.fileError=!1,i.dropText=e.dropText||"Click here or drop files to upload";var t=function(e){var a=!0,n=i.$eval(r.base64FileUpload).schema;return e.size>parseInt(n.maxSize,10)?(a=!1,l.$setValidity("base64FileUploadSize",!1),i.$apply()):(l.$setValidity("base64FileUploadSize",!0),i.$apply()),a},s=function(e){if(e&&t(e)){var n=new FileReader;i.file=e,i.file.ext=e.name.split(".").slice(-1)[0],i.file.src=URL.createObjectURL(e);var r=e.size/1024,s="kB";r>1024&&(r/=1024,s="MB"),i.file.humanSize=r.toFixed(1)+" "+s,n.onloadstart=function(e){a(function(){i.loadingFile=!0},0)},n.onload=function(e){a(function(){i.loadingFile=!1},0),l.$setViewValue(e.target.result)},n.readAsDataURL(e),i.$apply()}};i.isImage=function(e){return e?e.type.indexOf("image")>-1:!1},i.removeFile=function(e){e.preventDefault(),e.stopPropagation(),i.file=void 0,l.$setViewValue(void 0)},n.find("input").bind("change",function(e){s(e.target.files[0])});var o=document.getElementsByClassName("base64-file--drop-area")[0];o.addEventListener("dragenter",function(e){e.preventDefault(),e.stopPropagation(),a(function(){i.dropAreaHover=!0},0)},!1),o.addEventListener("dragleave",function(e){e.preventDefault(),e.stopPropagation(),a(function(){i.dropAreaHover=!1},0)},!1),o.addEventListener("dragover",function(e){e.preventDefault(),e.stopPropagation(),a(function(){i.dropAreaHover=!0},0)},!1),o.addEventListener("drop",function(e){e.preventDefault(),e.stopPropagation(),a(function(){i.dropAreaHover=!1},0),s(e.dataTransfer.files[0])},!1)}}}]);